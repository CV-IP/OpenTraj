%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./Voronoi_fundamental_diagram1.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Tue Aug 17 17:36:14 2010
%%DocumentFonts: (atend)
%%BoundingBox: 105 49 356 301
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./Voronoi_fundamental_diagram1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (ZhangJun)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Aug 17 17:36:14 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
2260 840 M
63 0 V
3537 0 R
-63 0 V
stroke
2140 840 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
2260 1560 M
63 0 V
3537 0 R
-63 0 V
stroke
2140 1560 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.5)]
] -66.7 MRshow
1.000 UL
LTb
2260 2280 M
63 0 V
3537 0 R
-63 0 V
stroke
2140 2280 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1)]
] -66.7 MRshow
1.000 UL
LTb
2260 3000 M
63 0 V
3537 0 R
-63 0 V
stroke
2140 3000 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1.5)]
] -66.7 MRshow
1.000 UL
LTb
2260 3720 M
63 0 V
3537 0 R
-63 0 V
stroke
2140 3720 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 2)]
] -66.7 MRshow
1.000 UL
LTb
2260 4440 M
63 0 V
3537 0 R
-63 0 V
stroke
2140 4440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 2.5)]
] -66.7 MRshow
1.000 UL
LTb
2260 840 M
0 63 V
0 3537 R
0 -63 V
stroke
2260 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
2710 840 M
0 63 V
0 3537 R
0 -63 V
stroke
2710 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.5)]
] -66.7 MCshow
1.000 UL
LTb
3160 840 M
0 63 V
0 3537 R
0 -63 V
stroke
3160 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1)]
] -66.7 MCshow
1.000 UL
LTb
3610 840 M
0 63 V
0 3537 R
0 -63 V
stroke
3610 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1.5)]
] -66.7 MCshow
1.000 UL
LTb
4060 840 M
0 63 V
0 3537 R
0 -63 V
stroke
4060 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 2)]
] -66.7 MCshow
1.000 UL
LTb
4510 840 M
0 63 V
0 3537 R
0 -63 V
stroke
4510 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 2.5)]
] -66.7 MCshow
1.000 UL
LTb
4960 840 M
0 63 V
0 3537 R
0 -63 V
stroke
4960 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 3)]
] -66.7 MCshow
1.000 UL
LTb
5410 840 M
0 63 V
0 3537 R
0 -63 V
stroke
5410 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 3.5)]
] -66.7 MCshow
1.000 UL
LTb
5860 840 M
0 63 V
0 3537 R
0 -63 V
stroke
5860 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 4)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
2260 4440 N
0 -3600 V
3600 0 V
0 3600 V
-3600 0 V
Z stroke
LCb setrgbcolor
1440 2640 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (<v>)]
[(Helvetica) 160.0 -60.0 true true 0 (v)]
[(Helvetica) 200.0 0.0 true true 0 ( [m/s])]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
4060 340 M
[ [(Helvetica) 200.0 0.0 true true 0 (<)]
[(Symbol) 200.0 0.0 true true 0 (r)]
[(Helvetica) 200.0 0.0 true true 0 (>)]
[(Helvetica) 160.0 -60.0 true true 0 (v)]
[(Helvetica) 200.0 0.0 true true 0 ( [1/m)]
[(Helvetica) 160.0 100.0 true true 0 (2)]
[(Helvetica) 200.0 0.0 true true 0 (] )]
] -66.7 MCshow
LTb
4060 4740 M
[ [(Symbol) 200.0 0.0 true true 0 (D)]
[(Helvetica) 200.0 0.0 true true 0 (x=[-2, 0]m, b)]
[(Helvetica) 160.0 -60.0 true true 0 (cor)]
[(Helvetica) 200.0 0.0 true true 0 (=1.8m)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
2456 2689 Pls
2584 2625 Pls
2866 2625 Pls
2927 2670 Pls
2859 2886 Pls
2788 2952 Pls
2707 2963 Pls
2681 3015 Pls
2669 3167 Pls
2436 3086 Pls
2579 2772 Pls
2764 2793 Pls
2952 2823 Pls
2903 3049 Pls
2464 2527 Pls
2661 2696 Pls
2878 2741 Pls
2736 2815 Pls
2585 2589 Pls
2582 2707 Pls
2673 2312 Pls
2952 2508 Pls
2849 2452 Pls
2840 2658 Pls
2713 2809 Pls
2700 2763 Pls
2719 2618 Pls
3013 2896 Pls
2825 2911 Pls
2773 3006 Pls
2863 3184 Pls
2706 3226 Pls
1.000 UP
1.000 UL
LT1
2617 2879 Crs
2600 3024 Crs
2750 3182 Crs
2791 2955 Crs
2823 2800 Crs
2822 2870 Crs
2947 2918 Crs
2932 2985 Crs
2751 3212 Crs
2599 3038 Crs
2740 3090 Crs
2630 3144 Crs
2636 3017 Crs
2687 2773 Crs
2812 2825 Crs
2813 2936 Crs
2817 3051 Crs
2693 2943 Crs
2632 2865 Crs
2659 3009 Crs
2570 2814 Crs
2538 2500 Crs
2678 2530 Crs
2854 2497 Crs
2963 2581 Crs
2866 2616 Crs
2933 2539 Crs
3034 2643 Crs
2808 2652 Crs
2655 2933 Crs
1.000 UP
1.000 UL
LT2
2998 2792 Star
3104 2772 Star
2918 2834 Star
2882 2928 Star
2905 2776 Star
2695 2771 Star
2758 2886 Star
2973 3020 Star
3000 2922 Star
2934 2679 Star
3161 2907 Star
2987 2868 Star
2887 2958 Star
3060 3010 Star
2721 2874 Star
2843 2925 Star
2891 3069 Star
2757 2767 Star
2832 2904 Star
2743 3033 Star
2636 2948 Star
2734 2947 Star
2653 2853 Star
2546 2784 Star
2643 2572 Star
2893 2593 Star
2940 2579 Star
2996 2541 Star
2948 2507 Star
3034 2832 Star
3003 2741 Star
3199 2607 Star
3021 2681 Star
2796 2697 Star
2751 2899 Star
2698 2784 Star
2772 2683 Star
2877 2675 Star
2874 2819 Star
2689 2795 Star
2721 2520 Star
2831 2599 Star
2673 2682 Star
2902 2692 Star
3145 2547 Star
3183 2590 Star
3179 2763 Star
2867 2978 Star
2660 2871 Star
2791 2927 Star
2881 3019 Star
2724 3153 Star
1.000 UP
1.000 UL
LT3
3250 2879 Box
3416 2965 Box
3061 2776 Box
3439 2722 Box
3361 2699 Box
3194 2658 Box
3007 2736 Box
2940 2632 Box
3567 2648 Box
3403 2550 Box
3157 2572 Box
3243 2573 Box
3527 2551 Box
3538 2463 Box
3320 2533 Box
3293 2568 Box
3148 2600 Box
3054 2560 Box
3167 2679 Box
3234 2459 Box
3424 2621 Box
3290 2503 Box
3314 2540 Box
3431 2439 Box
3364 2406 Box
3322 2383 Box
3490 2286 Box
3632 2383 Box
3285 2234 Box
3119 2372 Box
3499 2310 Box
3608 2370 Box
3486 2452 Box
3220 2506 Box
3203 2591 Box
3355 2481 Box
1.000 UP
1.000 UL
LT4
3533 2555 BoxF
3642 2601 BoxF
3515 2613 BoxF
3472 2621 BoxF
3207 2677 BoxF
3096 2527 BoxF
3341 2421 BoxF
3474 2379 BoxF
3864 2429 BoxF
3691 2343 BoxF
3525 2427 BoxF
3466 2444 BoxF
3653 2378 BoxF
3732 2315 BoxF
3803 2254 BoxF
4098 2203 BoxF
4065 2150 BoxF
4010 2204 BoxF
3866 2258 BoxF
3860 2289 BoxF
3910 2273 BoxF
3842 2302 BoxF
3685 2310 BoxF
3639 2182 BoxF
3619 2212 BoxF
3397 2322 BoxF
3368 2277 BoxF
3785 2276 BoxF
4029 2237 BoxF
3797 2210 BoxF
3833 2158 BoxF
3947 2088 BoxF
3998 2114 BoxF
3985 2016 BoxF
3886 2047 BoxF
3886 2013 BoxF
3999 2006 BoxF
3958 2032 BoxF
3601 1996 BoxF
3372 1988 BoxF
3448 2111 BoxF
3745 2036 BoxF
3978 1986 BoxF
4077 2125 BoxF
4044 2035 BoxF
4034 2038 BoxF
3941 1977 BoxF
3944 1926 BoxF
1.000 UP
1.000 UL
LT5
0.63 0.13 0.94 C 3732 2318 Circle
3803 2304 Circle
3821 2335 Circle
3910 2307 Circle
3924 2347 Circle
3774 2391 Circle
3750 2292 Circle
3915 2326 Circle
3768 2336 Circle
3583 2366 Circle
3605 2351 Circle
3747 2285 Circle
3671 2234 Circle
3618 2259 Circle
3698 2307 Circle
3639 2224 Circle
3713 2298 Circle
3898 2279 Circle
3927 2286 Circle
3857 2257 Circle
3923 2249 Circle
3824 2215 Circle
3816 2258 Circle
3961 2289 Circle
3700 2300 Circle
3425 2242 Circle
3407 2326 Circle
3469 2259 Circle
3645 2223 Circle
3788 2198 Circle
3793 2232 Circle
3708 2179 Circle
3780 2166 Circle
3689 2139 Circle
3590 2090 Circle
3614 2122 Circle
3867 2053 Circle
4083 2076 Circle
4018 2042 Circle
3972 2028 Circle
4104 2027 Circle
4077 2071 Circle
3954 2077 Circle
4006 2016 Circle
4146 2068 Circle
4197 2100 Circle
3994 2118 Circle
3911 2057 Circle
3958 2120 Circle
3872 2128 Circle
3628 2064 Circle
3591 2055 Circle
3799 2167 Circle
1.000 UP
1.000 UL
LT6
3811 2353 CircleF
3781 2289 CircleF
3960 2330 CircleF
3812 2271 CircleF
3843 2233 CircleF
4085 2111 CircleF
4127 2097 CircleF
3934 2028 CircleF
3898 1937 CircleF
3953 1913 CircleF
4187 1881 CircleF
4192 1843 CircleF
4086 1849 CircleF
4083 1792 CircleF
4104 1815 CircleF
4232 1805 CircleF
4332 1783 CircleF
4214 1748 CircleF
4209 1843 CircleF
4272 1772 CircleF
4292 1696 CircleF
4243 1698 CircleF
4176 1687 CircleF
4119 1710 CircleF
4139 1776 CircleF
4106 1761 CircleF
3972 1703 CircleF
4022 1689 CircleF
4297 1686 CircleF
4437 1625 CircleF
4411 1569 CircleF
4348 1631 CircleF
4170 1646 CircleF
4062 1563 CircleF
4146 1643 CircleF
4243 1669 CircleF
4238 1673 CircleF
4125 1663 CircleF
4095 1706 CircleF
4235 1714 CircleF
4392 1685 CircleF
4519 1690 CircleF
4518 1580 CircleF
4423 1639 CircleF
4348 1612 CircleF
4344 1638 CircleF
4477 1576 CircleF
4450 1669 CircleF
1.000 UP
1.000 UL
LT7
3641 1831 TriU
3987 1794 TriU
4250 1745 TriU
4372 1655 TriU
4307 1550 TriU
4334 1506 TriU
4366 1464 TriU
4350 1451 TriU
4372 1520 TriU
4328 1489 TriU
4344 1421 TriU
4461 1359 TriU
4508 1386 TriU
4515 1387 TriU
4536 1396 TriU
4496 1389 TriU
4389 1385 TriU
4335 1501 TriU
4343 1491 TriU
4459 1552 TriU
4603 1552 TriU
4675 1461 TriU
4640 1477 TriU
4572 1480 TriU
4459 1532 TriU
4439 1461 TriU
4468 1460 TriU
4451 1466 TriU
4416 1466 TriU
4512 1462 TriU
4455 1538 TriU
4323 1482 TriU
4329 1480 TriU
4298 1462 TriU
4251 1547 TriU
4277 1530 TriU
4315 1507 TriU
4423 1468 TriU
4630 1440 TriU
4760 1462 TriU
4792 1445 TriU
4753 1404 TriU
4732 1429 TriU
4847 1497 TriU
4933 1456 TriU
4933 1477 TriU
4927 1416 TriU
4998 1384 TriU
5003 1418 TriU
5012 1414 TriU
4907 1428 TriU
4781 1458 TriU
4762 1457 TriU
4528 1449 TriU
4404 1376 TriU
4438 1422 TriU
4534 1453 TriU
1.000 UP
1.000 UL
LT8
4213 1869 TriUF
4504 1714 TriUF
4843 1570 TriUF
5027 1535 TriUF
5016 1507 TriUF
5108 1476 TriUF
5034 1465 TriUF
4927 1408 TriUF
4971 1345 TriUF
4918 1287 TriUF
4867 1354 TriUF
5038 1334 TriUF
5135 1255 TriUF
5151 1244 TriUF
5020 1288 TriUF
4969 1323 TriUF
4922 1347 TriUF
4795 1375 TriUF
4778 1397 TriUF
4877 1333 TriUF
5004 1305 TriUF
4927 1316 TriUF
4936 1333 TriUF
4878 1343 TriUF
4861 1363 TriUF
4778 1350 TriUF
4626 1335 TriUF
4572 1311 TriUF
4686 1290 TriUF
4725 1317 TriUF
4752 1283 TriUF
4896 1289 TriUF
4970 1275 TriUF
4959 1282 TriUF
5039 1347 TriUF
5078 1301 TriUF
5091 1315 TriUF
5092 1328 TriUF
5056 1276 TriUF
5107 1371 TriUF
5065 1350 TriUF
5000 1337 TriUF
5066 1333 TriUF
5177 1318 TriUF
5325 1334 TriUF
5454 1430 TriUF
5433 1372 TriUF
5369 1379 TriUF
5195 1308 TriUF
5111 1375 TriUF
4961 1333 TriUF
4792 1357 TriUF
4645 1380 TriUF
4551 1262 TriUF
1.000 UL
LTb
2260 4440 N
0 -3600 V
3600 0 V
0 3600 V
-3600 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
